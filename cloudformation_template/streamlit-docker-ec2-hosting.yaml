AWSTemplateFormatVersion: '2010-09-09'
Description: 'Set up EC2 instance as the server'

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: 'AWS Keypair'
  AMIImage:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id

Resources:
  AdminUser:
    Type: AWS::IAM::User
    Properties:
      UserName: admin-user
      Path: '/'

  AdminPolicyAttachment:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: AdminUserPolicy
      Users:
        - !Ref AdminUser
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "*"
            Resource: "*"

  AdminAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref AdminUser

  MlflowEC2Role:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: '/'
      Policies:
        - PolicyName: MlflowS3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement: 
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::mlflow-tracking-bucket2025
                  - !Sub arn:aws:s3:::mlflow-tracking-bucket2025/*
        - PolicyName: SecretAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Ref StoreAdminSecret

  MLflowInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [!Ref MlflowEC2Role]

  StoreAdminSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: AdminUserAccessKeys
      Description: "Access keys for admin-user"
      SecretString: !Sub |
        {
          "AccessKeyId": "${AdminAccessKey}",
          "SecretAccessKey": "${AdminAccessKey.SecretAccessKey}"
        }
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  SeverSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow port 5000 and 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AMIImage
      KeyName: !Ref KeyName
      SecurityGroups: [!Ref SeverSecurityGroup]
      InstanceType: t2.micro
      IamInstanceProfile: !Ref MLflowInstanceProfile
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 20
            VolumeType: gp2
            DeleteOnTermination: true
      Tags:
        - Key: Name
          Value: mlflow-tracking-server
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          exec > >(tee /var/log/user-data.log | logger -t user-data -s 2>/dev/console) 2>&1
          set -e
          export DEBIAN_FRONTEND=noninteractive

          # Update and install dependencies
          apt-get update -y
          apt-get install -y python3 python3-pip python-is-python3 python3-venv curl unzip nginx jq

          # Create mlflow-folder and a virtual environment inside it
          mkdir -p /home/ubuntu/mlflow-folder
          cd /home/ubuntu/mlflow-folder
          python3 -m venv venv

          # Activate the virtual environment
          source venv/bin/activate

          # Upgrade pip and install required packages
          pip install --upgrade pip
          pip install virtualenv awscli boto3
          pip install --force-reinstall blinker

          SECRET_JSON=$(aws secretsmanager get-secret-value \
            --secret-id AdminUserAccessKeys \
            --region ${AWS::Region} \
            --query SecretString --output text)

          export AWS_ACCESS_KEY_ID=$(echo $SECRET_JSON | jq -r .AccessKeyId)
          export AWS_SECRET_ACCESS_KEY=$(echo $SECRET_JSON | jq -r .SecretAccessKey)

          echo "Installing MLflow..." | tee -a /home/ubuntu/mlflow-folder/pip-install.log
          pip install "mlflow[extras]" 2>&1 | tee -a /home/ubuntu/mlflow-folder/pip-install.log

          # Create working directory for MLflow artifacts
          mkdir -p /home/ubuntu/mlflow-folder/tracking

          # Start MLflow server in background with nohup
          nohup /home/ubuntu/mlflow-folder/venv/bin/mlflow server \
            --host 0.0.0.0 \
            --port 5000 \
            --default-artifact-root s3://mlflow-tracking-bucket2025 \
            --backend-store-uri sqlite:////home/ubuntu/mlflow-folder/mlflow.db > /home/ubuntu/mlflow-folder/mlflow.log 2>&1 &

          echo "MLflow setup completed." | tee /home/ubuntu/mlflow-folder/userdata-status.txt

  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: mlflow-tracking-bucket2025
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred

Outputs:
  AdminUserName:
    Description: "The IAM user with admin access"
    Value: !Ref AdminUser

  MLflowPublicURL:
    Description: "URL for accessing MLflow UI"
    Value: !Sub "http://${EC2Instance.PublicDnsName}:5000"
