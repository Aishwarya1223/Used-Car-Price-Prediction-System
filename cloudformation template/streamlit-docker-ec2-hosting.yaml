AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 instance with Docker to run a Streamlit app

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair
    Type: AWS::EC2::KeyPair::KeyName
  AMIImage:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:

  StreamlitSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and Streamlit traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8501
          ToPort: 8501
          CidrIp: 0.0.0.0/0

  StreamlitInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroups: [!Ref StreamlitSecurityGroup]
      ImageId: !Ref AMIImage
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 30
            VolumeType: gp2
            DeleteOnTermination: true
      UserData: |
          #!/bin/bash
          exec > >(tee /var/log/user-data.log | logger -t user-data -s 2>/dev/console) 2>&1
          set -e
          export DEBIAN_FRONTEND=noninteractive
          yum update -y
          yum install -y docker git
          service docker start
          usermod -aG docker ec2-user

          echo "cd /home/ec2-user

          # If app folder already exists, pull latest changes
          if [ -d app/.git ]; then
            cd app
            git pull origin main
          else
            git clone https://github.com/Aishwarya1223/Used-Car-Price-Prediction-System app
            cd app
          fi

          # Build and run the app container
          if [ "$(docker ps -q)" ]; then
            docker stop $(docker ps -q)
          fi

          if [ "$(docker ps -aq)" ]; then
            docker rm $(docker ps -aq)
          fi

          docker build -t used-car-predict-app .
          docker run -d -p 8501:8501 used-car-predict-app
          " > /home/ec2-user/start.sh

          chmod +x /home/ec2-user/start.sh
          chown ec2-user:ec2-user /home/ec2-user/start.sh
          sudo -u ec2-user bash /home/ec2-user/start.sh

  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref StreamlitInstance

Outputs:
  InstancePublicIP:
    Description: Public IP of the EC2 instance
    Value: !GetAtt StreamlitInstance.PublicIp

  AppURL:
    Description: URL to access the Streamlit app
    Value: !Sub "http://${StreamlitInstance.PublicIp}:8501"
